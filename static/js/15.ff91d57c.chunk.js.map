{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","modules/account/account.service.ts","modules/account/account.store.ts","../node_modules/react-bootstrap/esm/Table.js","themes/account/pages/Home/index.tsx","i18n.enum.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","common/utils/storage.util.ts","modules/messages/message.enum.ts","modules/messages/message.constants.ts","common/sevices/index.ts","common/utils/apis.util.ts","modules/account/router.enum.ts"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","accountPrefix","DEFAULT_API","PREFIX","skip","take","console","log","http","get","this","params","result","data","model","excludedModel","removeConfirmationFields","post","AccountStore","accountService","getAccounts","accounts","totalCount","createUserForm","register","email","password","homephone","observable","action","AccountStoreContext","React","createContext","Table","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","observer","accountStore","useContext","useState","setAccounts","useEffect","a","style","background","minHeight","marginLeft","map","account","Id","FName","LName","Username","I18N","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","saveToStorage","key","localStorage","removeItem","setItem","removeFromStorage","MESSAGE_TYPE","ERRORS","Errors","DELETE_SUCCESS","label","MESSAGES_DELETE_SUCCESS","UPDATE_SUCCESS","MESSAGES_UPDATE_SUCCESS","CREATED_SUCCESS","MESSAGES_CREATED_SUCCESS","LOGIN_FAIL","axiosInstance","axios","create","baseURL","headers","Accept","interceptors","request","use","config","getItem","common","response","res","error","toast","dismiss","handleResponseError","detailError","messageDetail","messageCode","status","window","location","pathname","includes","replace","message","errorCode","find","Promise","reject","object","keysWithConfirmation","keys","filter","excludedFiltered","DEFAULT_ROUTERS","DEFAULT_ACTION_ROUTERS","VERIFIED_STATUS"],"mappings":"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","file":"static/js/15.ff91d57c.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import http from \"../../common/sevices\";\r\nimport { removeConfirmationFields } from \"../../common/utils/apis.util\";\r\nimport { CreateUserDto } from \"./account.dto\";\r\nimport { DEFAULT_API } from \"./router.enum\";\r\n\r\nclass AccountService {\r\n  accountPrefix: string = DEFAULT_API.PREFIX;\r\n\r\n  public async getAccounts(skip: number, take: number) {\r\n    console.log(\"debug\");\r\n    const result = await http.get(`${this.accountPrefix}/`, {\r\n      params: {\r\n        skip: skip,\r\n        take: take,\r\n      },\r\n    });\r\n    return result.data;\r\n  }\r\n\r\n  public async register(model: CreateUserDto) {\r\n    const excludedModel = removeConfirmationFields(model);\r\n    const result = await http.post(\r\n      `${this.accountPrefix}/`,\r\n      excludedModel\r\n    );\r\n    console.log(result)\r\n    return result.data;\r\n  }\r\n}\r\n\r\nexport default new AccountService();\r\n","import React from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport accountService from './account.service';\r\nimport { CreateUserDto } from './account.dto';\r\n\r\nclass AccountStore {\r\n  @observable accounts: Account[] = [];\r\n  @observable totalCount: number = 0;\r\n  @observable createUserForm: CreateUserDto = {\r\n    email: '',\r\n    password: '',\r\n    homephone: '',\r\n  };\r\n\r\n  @action\r\n  async getAccounts(skip: number, take: number) {\r\n    let data: any = [];\r\n    data = await accountService.getAccounts(skip, take);\r\n    this.accounts = data[0];\r\n    this.totalCount = data[1];\r\n  }\r\n\r\n  @action\r\n  async setCreateUserForm(data: CreateUserDto) {\r\n    this.createUserForm = data;\r\n  }\r\n\r\n  @action\r\n  async register() {\r\n    const data = await accountService.register(this.createUserForm);\r\n    return data;\r\n  }\r\n\r\n  @action\r\n  async resetCreateUserForm() {\r\n    this.createUserForm = {\r\n      email: '',\r\n      password: '',\r\n      homephone: '',\r\n    };\r\n  }\r\n}\r\n  \r\n  export default new AccountStore();\r\n  \r\n  export const AccountStoreContext = React.createContext(new AccountStore());\r\n  ","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport { Row, Table } from \"react-bootstrap\";\r\nimport { AccountStoreContext } from \"../../../../modules/account/account.store\";\r\n\r\nconst HomePage = () => {\r\n  const accountStore = React.useContext(AccountStoreContext);\r\n  const [accounts, setAccounts] = React.useState<any[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    const getAccounts = async () => {\r\n      await accountStore.getAccounts(0, 10);\r\n      setAccounts(accountStore.accounts);\r\n    };\r\n    getAccounts();\r\n  }, [accountStore]);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ background: \"white\", minHeight: \"1000px\"}}>\r\n        {console.log(accounts)}\r\n        <Row style={{ marginLeft: '10px' }}>Home Page</Row>\r\n        <Row style={{ marginLeft: '10px' }}>Test account</Row>\r\n        <br/>\r\n        <Table striped bordered hover responsive=\"lg\" style={{marginLeft: '10px'}}>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Username</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {accounts?.map((account: any) => (\r\n              <tr>\r\n                <td>{account.Id}</td>\r\n                <td>{account.FName}</td>\r\n                <td>{account.LName}</td>\r\n                <td>{account.Username}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","export enum I18N {\r\n    LOGIN_FAIL = 'Login Fail. Wrong email or password. Please try again',\r\n    VALIDATE_EMAIL = 'Please enter a valid email address (Ex: johndoe@domain.com)',\r\n    VALIDATE_REQUIRED = 'This is a required field',\r\n    VALIDATE_PHONE = 'Phone number is not valid',\r\n    VALIDATE_CONFIRM_PASSWORD = 'Please enter the same value',\r\n    ADMIN_NEW_ACCOUNT = 'New Account',\r\n    ADMIN_EDIT_ACCOUNT = 'Edit Account',\r\n    ADMIN_MANAGE_ACCOUNT = 'Manage Accounts',\r\n    ADMIN_MANAGE_PRODUCT = 'Manage Products',\r\n    ACCOUNT_CREATE_TITLE = 'Sign up',\r\n    ACCOUNT_CONFIRM_PASSWORD = 'Confirm Password',\r\n    ACCOUNT_PHONE_REQUIRED = 'Phone number',\r\n    PLACEHOLDER_PHONE = 'Ex: 09xxxxxxxx',\r\n    ACCOUNT_FNAME = 'First name',\r\n    ACCOUNT_LNAME = 'Last name',\r\n    ACCOUNT_PHONE = 'Phone number',\r\n    ACCOUNT_ROLE_LABEL = 'Account type',\r\n    MODAL_CONFIRM = 'Confirmation',\r\n    BUTTONS_OK = 'Ok',\r\n    BUTTONS_CANCEL = 'Cancel',\r\n    BUTTONS_CREATE = 'Create',\r\n    BUTTONS_DELETE = 'Delete',\r\n    BUTTONS_UPDATE = 'Update',\r\n    BUTTONS_LOGIN = 'Login',\r\n    BUTTONS_SIGNUP = 'Signup',\r\n    BUTTONS_ADD_NEW = 'New',\r\n    BUTTONS_RESTORE = 'Restore',\r\n    PLACEHOLDER_EMAIL = 'Please enter your email here',\r\n    PLACEHOLDER_PASSWORD = 'Please enter your pass word here',\r\n    PLACEHOLDER_CONFIRM_PASSWORD = 'Confirm password',\r\n    ACCOUNT_LOGIN_WELCOME = 'Welcome',\r\n    ACCOUNT_EMAIL = 'Email',\r\n    ACCOUNT_PASSWORD = 'Password',\r\n    ACCOUNT_LINK_FORGOTPASSWORD = 'Forgot password',\r\n    PAGING_FIRST = 'First',\r\n    PAGING_LAST = 'Last',\r\n    PAGING_NEXT = 'Next',\r\n    PAGING_PREV = 'Prev',\r\n    PAGING_AMOUNT = 'record(s) found',\r\n    PAGING_PER_PAGE = 'per page',\r\n    MESSAGES_DELETE_SUCCESS = 'Deleted successfully',\r\n    MESSAGES_VERIFY_SUCCESS = 'Verified successfully',\r\n    MESSAGES_UPDATE_SUCCESS = 'Updated successfully',\r\n    MESSAGES_CREATED_SUCCESS = 'Created successfully',\r\n    ADMIN_MENU_LOG_OUT = 'Log out',\r\n}\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*\r\n * store an item to local storage\r\n *\r\n * @param string key\r\n * @param any value\r\n * @return void\r\n */\r\nexport const saveToStorage = (key: string, value: string) => {\r\n  localStorage.removeItem(key);\r\n  localStorage.setItem(key, value);\r\n};\r\n\r\n/*\r\n * remove an item out of local storage\r\n *\r\n * @param string key\r\n * @return void\r\n */\r\nexport const removeFromStorage = (key: string) => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\n/*\r\n * retrieve an item from local storage\r\n *\r\n * @param string key\r\n * @return any\r\n */\r\nexport const retrieveFromStorage = (key: string) => {\r\n  return localStorage.getItem(key);\r\n};\r\n\r\n/*\r\n * store an item to session storage\r\n *\r\n * @param string key\r\n * @param any value\r\n * @return void\r\n */\r\nexport const saveToSession = (key: string, value: any) => {\r\n  sessionStorage.removeItem(key);\r\n  sessionStorage.setItem(key, value);\r\n};\r\n\r\n/*\r\n * remove an item out of session storage\r\n *\r\n * @param string key\r\n * @return void\r\n */\r\nexport const removeFromSession = (key: string) => {\r\n  sessionStorage.removeItem(key);\r\n};\r\n\r\n/*\r\n * retrieve an item from session storage\r\n *\r\n * @param string key\r\n * @return any\r\n */\r\nexport const retrieveFromSession = (key: string) => {\r\n  return sessionStorage.getItem(key);\r\n};\r\n","export enum MESSAGE_TYPE {\r\n  PRIMARY = 'primary',\r\n  SECONDARY = 'secondary',\r\n  SUCCESS = 'success',\r\n  DANGER = 'danger',\r\n  WARNING = 'warning',\r\n  INFO = 'info',\r\n  LIGHT = 'light',\r\n  DARK = 'dark',\r\n}\r\n\r\nexport enum ERRORS {\r\n  SELECTED_ITEMS = 'SELECTED_ITEMS',\r\n  FORGOT_SUCCESS = 'FORGOT_SUCCESS',\r\n  CONFIRM_DELETE = 'CONFIRM_DELETE',\r\n  CONFIRM_CANCEL = 'CONFIRM_CANCEL',\r\n  DELETE_SUCCESS = 'DELETE_SUCCESS',\r\n  UPDATE_SUCCESS = 'UPDATE_SUCCESS',\r\n  CREATED_SUCCESS = 'CREATED_SUCCESS',\r\n  IMAGE_SIZE = 'IMAGE_SIZE',\r\n  LOGIN_FAIL = 'LOGIN_FAIL',\r\n  CREATE_ERROR = 'CREATE_ERROR',\r\n  EMAIL_EXIST = 'EMAIL_EXIST',\r\n  INVALID = 'INVALID',\r\n  NOT_FOUND = 'NOT_FOUND',\r\n  ERROR = 'ERROR',\r\n  SELF_DELETE = 'SELF_DELETE',\r\n  SUPER_ADMIN_DELETE = 'SUPER_ADMIN_DELETE',\r\n  ORDER_NOT_FOUND = 'ORDER_NOT_FOUND',\r\n  PHONE_EXIST = 'PHONE_EXIST',\r\n  EXISTED = 'EXISTED',\r\n  CREATE_ORDER_ERROR = 'CREATE_ORDER_ERROR',\r\n  NOT_ASSIGNED = 'NOT_ASSIGNED',\r\n  DELETED_ACCOUNT = 'DELETED_ACCOUNT',\r\n  KICKED_OUT = 'KICKED_OUT',\r\n  WRONG_PHONE_NUMBER_FORMAT = 'WRONG_PHONE_NUMBER_FORMAT',\r\n  PHONE_INPUT_TOO_LONG = 'PHONE_INPUT_TOO_LONG',\r\n  TAKEN = 'TAKEN',\r\n  TOKEN_ERROR = 'TOKEN_ERROR',\r\n  ORDER_PERMISSION = 'ORDER_PERMISSION',\r\n  NOT_VERIFIED = 'NOT_VERIFIED',\r\n  FOLDER_NOT_EXISTED = 'FOLDER_NOT_EXISTED',\r\n  EMAIL_NOT_VERIFY = 'EMAIL_NOT_VERIFY',\r\n  PHONE_OTP_VERIFY = 'PHONE_OTP_VERIFY',\r\n  INCORRECT_OTP = 'INCORRECT_OTP',\r\n  OTP_EXPIRED = 'OTP_EXPIRED',\r\n  PHONE_NOT_EXIST = 'PHONE_NOT_EXIST',\r\n  PICKUP_CODE_INCORRECT = 'PICKUP_CODE_INCORRECT',\r\n  ADMIN_NOT_FOUND = 'ADMIN_NOT_FOUND',\r\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\r\n  DETAIL_REQUIRED = 'DETAIL_REQUIRED',\r\n}\r\n","import { I18N } from \"../../i18n.enum\";\r\nimport { ErrorDto } from \"./message.dto\";\r\nimport { ERRORS } from \"./message.enum\";\r\n\r\n\r\nexport const Errors: ErrorDto[] = [\r\n  {\r\n    key: ERRORS.DELETE_SUCCESS,\r\n    label: I18N.MESSAGES_DELETE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.UPDATE_SUCCESS,\r\n    label: I18N.MESSAGES_UPDATE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.CREATED_SUCCESS,\r\n    label: I18N.MESSAGES_CREATED_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.LOGIN_FAIL,\r\n    label: I18N.LOGIN_FAIL,\r\n  }\r\n];\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Errors } from '../../modules/messages/message.constants';\r\nimport { handleResponseError } from '../utils/apis.util';\r\nimport { removeFromStorage } from '../utils/storage.util';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:4000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n  if (!!localStorage.getItem('token')) {\r\n    config.headers.common['Authorization'] =\r\n      'Bearer ' + localStorage.getItem('token');\r\n  }\r\n  config.headers.common['Access-Control-Allow-Origin'] = '*';\r\n  return config;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (res) => res,\r\n  (error) => {\r\n    // Remove all toasts !\r\n    toast.dismiss();\r\n\r\n    if (!error.response) {\r\n      toast.error('Unknown error happened! Please contact admin for support');\r\n      return handleResponseError(error);\r\n    }\r\n\r\n    const { data } = error.response;\r\n    const { detailError } = data;\r\n\r\n    let messageDetail = '';\r\n    let messageCode = '';\r\n\r\n    if (error.response.status === 403) {\r\n      removeFromStorage('token');\r\n      if (!window.location.pathname.includes('login'))\r\n        window.location.replace('/');\r\n    }\r\n\r\n    if (detailError) {\r\n      if (Array.isArray(detailError.message)) {\r\n        messageDetail = detailError.message[0];\r\n        messageCode = detailError?.errorCode ?? '';\r\n      } else {\r\n        messageDetail = detailError.message;\r\n        messageCode = detailError?.errorCode ?? '';\r\n      }\r\n    } else {\r\n      messageDetail = data.message;\r\n      messageCode = data?.errorCode ?? '';\r\n    }\r\n\r\n    if (messageCode !== '') {\r\n      const error = Errors.find((error) => error.key === messageCode);\r\n      if (error) toast.error((error.label));\r\n      else toast.error(messageDetail);\r\n    } else {\r\n      toast.error(messageDetail);\r\n    }\r\n    \r\n    if (error.response.status === 400) {\r\n      return data;\r\n    }\r\n\r\n    return handleResponseError(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","export const handleResponseError = (error: any) => {\r\n  return Promise.reject(error);\r\n};\r\n\r\nexport const removeConfirmationFields = (object: any) => {\r\n  const keysWithConfirmation = Object.keys(object).filter((key) =>\r\n    key.includes('confirm')\r\n  );\r\n\r\n  const excludedFiltered = { ...object };\r\n  keysWithConfirmation.map((key) => delete excludedFiltered[key]);\r\n  return excludedFiltered;\r\n};\r\n\r\nexport const removeUnusedProps = (object: any) => {\r\n  let temp = {};\r\n  Object.keys(object).forEach((key) => {\r\n    if (object[key] !== undefined) temp = { ...temp, [key]: object[key] };\r\n  });\r\n  return temp;\r\n};\r\n","export enum DEFAULT_ROUTERS {\r\n  LOGIN = '/account/login',\r\n  FORGOT_PASSWORD = '/account/forgotpassword',\r\n  RESET_PASSWORD_TOKEN = '/account/reset-password/:token',\r\n  VERIFY_EMAIL = '/account/verify-email/:token',\r\n  SET_PASSWORD_TOKEN = '/account/set-password/:token',\r\n  CREATE = '/account/register',\r\n  SETUP = '/account/setup',\r\n  ACCOUNT_MANAGE = '/account/manage',\r\n  NOT_VERIFIED = '/account/not-verified',\r\n  THANKYOU = '/account/thankyou/:action'\r\n}\r\n\r\nexport enum DEFAULT_ACTION_ROUTERS {\r\n  THANKYOU = '/account/thankyou/',\r\n}\r\n\r\nexport enum DEFAULT_API {\r\n  PREFIX = '/accounts',\r\n}\r\n\r\nexport enum VERIFIED_STATUS {\r\n  UNVERIFIED,\r\n  PENDING,\r\n  VERIFIED,\r\n}\r\n"],"sourceRoot":""}