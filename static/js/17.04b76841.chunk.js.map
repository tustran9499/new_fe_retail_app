{"version":3,"sources":["modules/authenticate/authenticate.service.ts","modules/authenticate/authentication.store.ts","modules/theme/assets/images/logo.svg","modules/theme/components/OnePage/index.tsx","modules/account/components/LoginForm/index.tsx","modules/account/components/DefaultLoginForm/index.tsx","themes/account/pages/Login/index.tsx","i18n.enum.ts","common/utils/storage.util.ts","modules/messages/message.enum.ts","modules/messages/message.constants.ts","common/sevices/index.ts","common/utils/apis.util.ts","modules/account/router.enum.ts"],"names":["accountPrefix","DEFAULT_API","PREFIX","model","http","post","this","result","data","token","get","AuthenticationStore","loginFormValue","loggedUser","tmpUser","history","url","urlNotVerified","authenticateService","login","_setCurrentInfo","redirectUrl","EmailVerified","_redirectAfterLogin","validateToken","_saveUser","validateResetToken","removeFromStorage","push","saveToStorage","console","log","validateEmailToken","observable","email","password","action","AuthenticationStoreContext","React","createContext","observer","props","style","className","children","title","href","display","alt","src","logo","handleLogin","handleForgotPassword","handleSignUp","formTitle","accountEmail","initialValues","VALIDATE_EMAIL","I18N","VALIDATE_REQUIRED","ACCOUNT_LOGIN_WELCOME","ACCOUNT_EMAIL","PLACEHOLDER_EMAIL","ACCOUNT_PASSWORD","PLACEHOLDER_PASSWORD","ACCOUNT_LINK_FORGOTPASSWORD","BUTTONS_LOGIN","BUTTONS_SIGNUP","schema","yup","required","validationSchema","onSubmit","values","handleSubmit","handleChange","handleBlur","errors","Form","noValidate","e","preventDefault","Row","Group","as","Col","md","controlId","Label","Control","type","placeholder","name","value","onChange","isInvalid","Feedback","Button","variant","onClick","ButtonGroup","useHistory","authenticationStore","useContext","a","setLoginFormValue","DEFAULT_ROUTERS","ACCOUNT_MANAGE","NOT_VERIFIED","useState","userEmail","setUserEmail","setInitValues","showAlert","setShowAlert","LoginFailAlert","Alert","onClose","dismissible","Heading","useEffect","clearTmpUser","OnePage","FORGOT_PASSWORD","CREATE","key","localStorage","removeItem","setItem","MESSAGE_TYPE","ERRORS","Errors","DELETE_SUCCESS","label","MESSAGES_DELETE_SUCCESS","UPDATE_SUCCESS","MESSAGES_UPDATE_SUCCESS","CREATED_SUCCESS","MESSAGES_CREATED_SUCCESS","LOGIN_FAIL","axiosInstance","axios","create","baseURL","headers","Accept","interceptors","request","use","config","getItem","common","response","res","error","toast","dismiss","handleResponseError","detailError","messageDetail","messageCode","status","window","location","pathname","includes","replace","Array","isArray","message","errorCode","find","Promise","reject","removeConfirmationFields","object","keysWithConfirmation","Object","keys","filter","excludedFiltered","map","DEFAULT_ACTION_ROUTERS","VERIFIED_STATUS"],"mappings":"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","file":"static/js/17.04b76841.chunk.js","sourcesContent":["import http from '../../common/sevices';\r\nimport { LoginDto } from '../account/account.dto';\r\nimport { DEFAULT_API } from '../account/router.enum';\r\n\r\nclass AuthenticateService {\r\n  accountPrefix: string = DEFAULT_API.PREFIX;\r\n\r\n  public async login(model: LoginDto) {\r\n    const result = await http.post(`${this.accountPrefix}/login`, model);\r\n    return result.data;\r\n  }\r\n\r\n  public async validateToken(token: string) {\r\n    const result = await http.post(`${this.accountPrefix}/check-token`, {\r\n      token,\r\n    });\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async validateResetToken(token: string) {\r\n    const result = await http.post(`${this.accountPrefix}/check-reset-token`, {\r\n      token,\r\n    });\r\n    return result.data?.result;\r\n  }\r\n\r\n  public async validateEmailToken(token: string) {\r\n    const result = await http.get(`${this.accountPrefix}/verify-email/${token}`);\r\n    return result.data;\r\n  }\r\n}\r\n\r\nexport default new AuthenticateService();\r\n","import React from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport authenticateService from './authenticate.service';\r\nimport { removeFromStorage, saveToStorage } from '../../common/utils/storage.util';\r\nimport { LoginDto } from '../account/account.dto';\r\n\r\nexport default class AuthenticationStore {\r\n  @observable loggedUser: any = null;\r\n  @observable tmpUser: any = null;\r\n  @observable loginFormValue: LoginDto = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  @action\r\n  async setLoginFormValue(data: LoginDto) {\r\n    this.loginFormValue = data;\r\n  }\r\n\r\n  @action\r\n  async setLoggedUser(data: any) {\r\n    this.loggedUser = data;\r\n  }\r\n\r\n  @action\r\n  async clearTmpUser() {\r\n    this.tmpUser = null;\r\n  }\r\n\r\n  @action\r\n  async login(history: any, url: string, urlNotVerified: string) {\r\n    const data = await authenticateService.login(this.loginFormValue);\r\n    if (data) {\r\n      this._setCurrentInfo(data);\r\n      const redirectUrl = (this.loggedUser.EmailVerified) ? url : urlNotVerified;\r\n      this._redirectAfterLogin(history, redirectUrl);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async validateToken(token: string, history: any) {\r\n    const data = await authenticateService.validateToken(token);\r\n    if (data) {\r\n      this._saveUser(data);\r\n    }\r\n  }\r\n\r\n  @action\r\n  async validateResetToken(token: string, history: any) {\r\n    const data = await authenticateService.validateResetToken(token);\r\n    if (data) {\r\n      this.tmpUser = data;\r\n    }\r\n  }\r\n\r\n  @action\r\n  async logout(history: any, url: string) {\r\n    removeFromStorage('token');\r\n    this.loggedUser = null;\r\n    history.push(url);\r\n  }\r\n\r\n  private _setCurrentInfo(data: any) {\r\n    this.loggedUser = data;\r\n    saveToStorage('token', data.token);\r\n  }\r\n\r\n  private _saveUser(data: any) {\r\n    this.loggedUser = data;\r\n  }\r\n\r\n  private _redirectAfterLogin(history: any, url: string) {\r\n    console.log(url);\r\n    return history.push(url);\r\n  }\r\n\r\n  // @action\r\n  // async registerToken(token: string) {\r\n  //   const result = await authenticateService.registerToken(token);\r\n  //   return result;\r\n  // }\r\n\r\n  @action\r\n  async validateEmailToken(token: string) {\r\n    const result = await authenticateService.validateEmailToken(token);\r\n    if (result) {\r\n      this.tmpUser = result;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport const AuthenticationStoreContext = React.createContext(\r\n  new AuthenticationStore()\r\n);\r\n","export default __webpack_public_path__ + \"static/media/logo.a19d979f.svg\";","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport logo from '../../../theme/assets/images/logo.svg';\r\n\r\n/*\r\n * Props of Component\r\n */\r\ninterface ComponentProps {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  title?: string;\r\n}\r\n\r\nconst OnePage = (props: ComponentProps) => {\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const { style, className, children, title } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`wrapper one-page ${className ? className : ''}`}\r\n        style={style}\r\n      >\r\n        <div className=\"main\">\r\n          <header className=\"header\">\r\n            <a href=\"/\" title=\"Retail System\" className=\"logo\" style={{display: 'none'}}>\r\n              <img alt=\"Retail System Logo\" src={logo} />\r\n            </a>\r\n            <div className=\"header-title\">{title}</div>\r\n          </header>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(OnePage);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Form, Col, Button, ButtonGroup } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { I18N } from '../../../../i18n.enum';\r\n\r\n/*\r\n * Props of Component\r\n */\r\ninterface ComponentProps {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  handleLogin: any;\r\n  handleForgotPassword: any;\r\n  handleSignUp?: any;\r\n  formTitle?: string;\r\n  initialValues?: any;\r\n  accountEmail?: string;\r\n}\r\n\r\nconst LoginForm = (props: ComponentProps) => {\r\n  /*\r\n   * Props of Component\r\n   */\r\n  const {\r\n    style,\r\n    className,\r\n    children,\r\n    handleLogin,\r\n    handleForgotPassword,\r\n    handleSignUp = false,\r\n    formTitle = '',\r\n    accountEmail,\r\n    initialValues = {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  } = props;\r\n\r\n  const {\r\n    VALIDATE_EMAIL,\r\n    VALIDATE_REQUIRED,\r\n    ACCOUNT_LOGIN_WELCOME,\r\n    ACCOUNT_EMAIL,\r\n    PLACEHOLDER_EMAIL,\r\n    ACCOUNT_PASSWORD,\r\n    PLACEHOLDER_PASSWORD,\r\n    ACCOUNT_LINK_FORGOTPASSWORD,\r\n    BUTTONS_LOGIN,\r\n    BUTTONS_SIGNUP,\r\n  } = I18N;\r\n\r\n  /*\r\n   * Validation\r\n   */\r\n  const schema = yup.object({\r\n    email: yup.string().required(VALIDATE_REQUIRED).email(VALIDATE_EMAIL),\r\n    password: yup.string().required(VALIDATE_REQUIRED),\r\n  });\r\n\r\n  initialValues.email = accountEmail ?? '';\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={(values) => {\r\n          handleLogin(values);\r\n        }}\r\n        initialValues={initialValues}\r\n      >\r\n        {({ handleSubmit, handleChange, handleBlur, values, errors }) => (\r\n          <Form\r\n            noValidate\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSubmit();\r\n            }}\r\n            className={`form form-login ${className ? className : ''}`}\r\n            style={style}\r\n          >\r\n            <h2 className=\"form-title\">\r\n              {formTitle ? formTitle : ACCOUNT_LOGIN_WELCOME}\r\n            </h2>\r\n            {children}\r\n\r\n            <Form.Row>\r\n              <Form.Group\r\n                as={Col}\r\n                md=\"12\"\r\n                controlId=\"email\"\r\n                className=\"form-group-email\"\r\n              >\r\n                <i className=\"ico ico-account-email\"></i>\r\n                <Form.Label className=\"form-label-required\">\r\n                  {ACCOUNT_EMAIL} <span>*</span>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder={PLACEHOLDER_EMAIL}\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.email}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.email}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group\r\n                as={Col}\r\n                md=\"12\"\r\n                controlId=\"password\"\r\n                className=\"form-group-password\"\r\n              >\r\n                <i className=\"ico ico-password\"></i>\r\n                <Form.Label className=\"form-label-required\">\r\n                  {ACCOUNT_PASSWORD} <span>*</span>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder={PLACEHOLDER_PASSWORD}\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.password}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.password}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"formBasicCheckbox\">\r\n                <Button\r\n                  variant=\"link\"\r\n                  className=\"action-link\"\r\n                  onClick={handleForgotPassword}\r\n                >\r\n                  {ACCOUNT_LINK_FORGOTPASSWORD}\r\n                </Button>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <ButtonGroup className=\"form-actions\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                <span>{BUTTONS_LOGIN}</span>\r\n                <i className=\"ico ico-o-next\"></i>\r\n              </Button>\r\n              {handleSignUp && (\r\n                <Button onClick={handleSignUp} variant=\"outline-primary\">\r\n                  <span>{BUTTONS_SIGNUP}</span>\r\n                  <i className=\"ico ico-plus\"></i>\r\n                </Button>\r\n              )}\r\n            </ButtonGroup>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport LoginForm from '../LoginForm';\r\n\r\ninterface ComponentProps {\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n  handleLogin: any;\r\n  handleForgotPassword: any;\r\n  handleSignUp?: any;\r\n  formTitle?: string;\r\n  initialValues?: any;\r\n  userEmail?: string;\r\n}\r\n\r\nconst DefaultLoginForm = (props: ComponentProps) => {\r\n  return (\r\n    <>\r\n      <LoginForm {...props} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(DefaultLoginForm);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport OnePage from '../../../../modules/theme/components/OnePage';\r\nimport DefaultLoginForm from '../../../../modules/account/components/DefaultLoginForm';\r\nimport { DEFAULT_ROUTERS } from '../../../../modules/account/router.enum';\r\nimport { AuthenticationStoreContext } from '../../../../modules/authenticate/authentication.store';\r\nimport { LoginDto } from '../../../../modules/account/account.dto';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst LoginAccountPage = () => {\r\n  const history = useHistory();\r\n  const authenticationStore = React.useContext(AuthenticationStoreContext);\r\n\r\n  /*\r\n   * Action of login button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleLogin = async (values: any) => {\r\n    const loginFormValue: LoginDto = {\r\n      email: values.email,\r\n      password: values.password,\r\n    };\r\n    authenticationStore.setLoginFormValue(loginFormValue);\r\n    await authenticationStore.login(history, DEFAULT_ROUTERS.ACCOUNT_MANAGE, DEFAULT_ROUTERS.NOT_VERIFIED);\r\n    //console.log(authenticationStore.loggedUser);\r\n  };\r\n\r\n  /*\r\n   * Action of forgot password link\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleForgotPassword = () => {\r\n    history.push(DEFAULT_ROUTERS.FORGOT_PASSWORD);\r\n  };\r\n\r\n  const [userEmail, setUserEmail] = React.useState('');\r\n\r\n  /*\r\n   * Action of Sign up button\r\n   * @params: void\r\n   * @return: void\r\n   */\r\n  const handleSignUp = () => {\r\n    history.push(DEFAULT_ROUTERS.CREATE);\r\n  };\r\n\r\n  const [initialValues, setInitValues] = React.useState<any>({\r\n    email: authenticationStore?.tmpUser?.email ?? '',\r\n    password: '',\r\n  });\r\n\r\n  const [showAlert, setShowAlert] = React.useState<boolean>(false);\r\n  \r\n  const LoginFailAlert = () => {\r\n    if (showAlert) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\r\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n          <p>\r\n            Change this and that and try again. Duis mollis, est non commodo\r\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\r\n            Cras mattis consectetur purus sit amet fermentum.\r\n          </p>\r\n        </Alert>\r\n      );\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (authenticationStore.tmpUser) {\r\n      setUserEmail(authenticationStore.tmpUser.email);\r\n      setInitValues({\r\n        email: authenticationStore?.tmpUser?.email ?? '',\r\n        password: '',\r\n      });\r\n      authenticationStore.clearTmpUser();\r\n    }\r\n  }, [authenticationStore, authenticationStore.tmpUser]);\r\n\r\n  return (\r\n    <>\r\n      <OnePage title={'Login'}>\r\n        <DefaultLoginForm\r\n          handleLogin={handleLogin}\r\n          handleForgotPassword={handleForgotPassword}\r\n          handleSignUp={handleSignUp}\r\n          userEmail={userEmail}\r\n          initialValues={initialValues}\r\n        />\r\n        <LoginFailAlert />\r\n      </OnePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(LoginAccountPage);\r\n","export enum I18N {\r\n    LOGIN_FAIL = 'Login Fail. Wrong email or password. Please try again',\r\n    VALIDATE_EMAIL = 'Please enter a valid email address (Ex: johndoe@domain.com)',\r\n    VALIDATE_REQUIRED = 'This is a required field',\r\n    VALIDATE_PHONE = 'Phone number is not valid',\r\n    VALIDATE_CONFIRM_PASSWORD = 'Please enter the same value',\r\n    ADMIN_NEW_ACCOUNT = 'New Account',\r\n    ADMIN_EDIT_ACCOUNT = 'Edit Account',\r\n    ADMIN_MANAGE_ACCOUNT = 'Manage Accounts',\r\n    ADMIN_MANAGE_PRODUCT = 'Manage Products',\r\n    ACCOUNT_CREATE_TITLE = 'Sign up',\r\n    ACCOUNT_CONFIRM_PASSWORD = 'Confirm Password',\r\n    ACCOUNT_PHONE_REQUIRED = 'Phone number',\r\n    PLACEHOLDER_PHONE = 'Ex: 09xxxxxxxx',\r\n    ACCOUNT_FNAME = 'First name',\r\n    ACCOUNT_LNAME = 'Last name',\r\n    ACCOUNT_PHONE = 'Phone number',\r\n    ACCOUNT_ROLE_LABEL = 'Account type',\r\n    MODAL_CONFIRM = 'Confirmation',\r\n    BUTTONS_OK = 'Ok',\r\n    BUTTONS_CANCEL = 'Cancel',\r\n    BUTTONS_CREATE = 'Create',\r\n    BUTTONS_DELETE = 'Delete',\r\n    BUTTONS_UPDATE = 'Update',\r\n    BUTTONS_LOGIN = 'Login',\r\n    BUTTONS_SIGNUP = 'Signup',\r\n    BUTTONS_ADD_NEW = 'New',\r\n    BUTTONS_RESTORE = 'Restore',\r\n    PLACEHOLDER_EMAIL = 'Please enter your email here',\r\n    PLACEHOLDER_PASSWORD = 'Please enter your pass word here',\r\n    PLACEHOLDER_CONFIRM_PASSWORD = 'Confirm password',\r\n    ACCOUNT_LOGIN_WELCOME = 'Welcome',\r\n    ACCOUNT_EMAIL = 'Email',\r\n    ACCOUNT_PASSWORD = 'Password',\r\n    ACCOUNT_LINK_FORGOTPASSWORD = 'Forgot password',\r\n    PAGING_FIRST = 'First',\r\n    PAGING_LAST = 'Last',\r\n    PAGING_NEXT = 'Next',\r\n    PAGING_PREV = 'Prev',\r\n    PAGING_AMOUNT = 'record(s) found',\r\n    PAGING_PER_PAGE = 'per page',\r\n    MESSAGES_DELETE_SUCCESS = 'Deleted successfully',\r\n    MESSAGES_VERIFY_SUCCESS = 'Verified successfully',\r\n    MESSAGES_UPDATE_SUCCESS = 'Updated successfully',\r\n    MESSAGES_CREATED_SUCCESS = 'Created successfully',\r\n    ADMIN_MENU_LOG_OUT = 'Log out',\r\n}\r\n","/*\r\n * store an item to local storage\r\n *\r\n * @param string key\r\n * @param any value\r\n * @return void\r\n */\r\nexport const saveToStorage = (key: string, value: string) => {\r\n  localStorage.removeItem(key);\r\n  localStorage.setItem(key, value);\r\n};\r\n\r\n/*\r\n * remove an item out of local storage\r\n *\r\n * @param string key\r\n * @return void\r\n */\r\nexport const removeFromStorage = (key: string) => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\n/*\r\n * retrieve an item from local storage\r\n *\r\n * @param string key\r\n * @return any\r\n */\r\nexport const retrieveFromStorage = (key: string) => {\r\n  return localStorage.getItem(key);\r\n};\r\n\r\n/*\r\n * store an item to session storage\r\n *\r\n * @param string key\r\n * @param any value\r\n * @return void\r\n */\r\nexport const saveToSession = (key: string, value: any) => {\r\n  sessionStorage.removeItem(key);\r\n  sessionStorage.setItem(key, value);\r\n};\r\n\r\n/*\r\n * remove an item out of session storage\r\n *\r\n * @param string key\r\n * @return void\r\n */\r\nexport const removeFromSession = (key: string) => {\r\n  sessionStorage.removeItem(key);\r\n};\r\n\r\n/*\r\n * retrieve an item from session storage\r\n *\r\n * @param string key\r\n * @return any\r\n */\r\nexport const retrieveFromSession = (key: string) => {\r\n  return sessionStorage.getItem(key);\r\n};\r\n","export enum MESSAGE_TYPE {\r\n  PRIMARY = 'primary',\r\n  SECONDARY = 'secondary',\r\n  SUCCESS = 'success',\r\n  DANGER = 'danger',\r\n  WARNING = 'warning',\r\n  INFO = 'info',\r\n  LIGHT = 'light',\r\n  DARK = 'dark',\r\n}\r\n\r\nexport enum ERRORS {\r\n  SELECTED_ITEMS = 'SELECTED_ITEMS',\r\n  FORGOT_SUCCESS = 'FORGOT_SUCCESS',\r\n  CONFIRM_DELETE = 'CONFIRM_DELETE',\r\n  CONFIRM_CANCEL = 'CONFIRM_CANCEL',\r\n  DELETE_SUCCESS = 'DELETE_SUCCESS',\r\n  UPDATE_SUCCESS = 'UPDATE_SUCCESS',\r\n  CREATED_SUCCESS = 'CREATED_SUCCESS',\r\n  IMAGE_SIZE = 'IMAGE_SIZE',\r\n  LOGIN_FAIL = 'LOGIN_FAIL',\r\n  CREATE_ERROR = 'CREATE_ERROR',\r\n  EMAIL_EXIST = 'EMAIL_EXIST',\r\n  INVALID = 'INVALID',\r\n  NOT_FOUND = 'NOT_FOUND',\r\n  ERROR = 'ERROR',\r\n  SELF_DELETE = 'SELF_DELETE',\r\n  SUPER_ADMIN_DELETE = 'SUPER_ADMIN_DELETE',\r\n  ORDER_NOT_FOUND = 'ORDER_NOT_FOUND',\r\n  PHONE_EXIST = 'PHONE_EXIST',\r\n  EXISTED = 'EXISTED',\r\n  CREATE_ORDER_ERROR = 'CREATE_ORDER_ERROR',\r\n  NOT_ASSIGNED = 'NOT_ASSIGNED',\r\n  DELETED_ACCOUNT = 'DELETED_ACCOUNT',\r\n  KICKED_OUT = 'KICKED_OUT',\r\n  WRONG_PHONE_NUMBER_FORMAT = 'WRONG_PHONE_NUMBER_FORMAT',\r\n  PHONE_INPUT_TOO_LONG = 'PHONE_INPUT_TOO_LONG',\r\n  TAKEN = 'TAKEN',\r\n  TOKEN_ERROR = 'TOKEN_ERROR',\r\n  ORDER_PERMISSION = 'ORDER_PERMISSION',\r\n  NOT_VERIFIED = 'NOT_VERIFIED',\r\n  FOLDER_NOT_EXISTED = 'FOLDER_NOT_EXISTED',\r\n  EMAIL_NOT_VERIFY = 'EMAIL_NOT_VERIFY',\r\n  PHONE_OTP_VERIFY = 'PHONE_OTP_VERIFY',\r\n  INCORRECT_OTP = 'INCORRECT_OTP',\r\n  OTP_EXPIRED = 'OTP_EXPIRED',\r\n  PHONE_NOT_EXIST = 'PHONE_NOT_EXIST',\r\n  PICKUP_CODE_INCORRECT = 'PICKUP_CODE_INCORRECT',\r\n  ADMIN_NOT_FOUND = 'ADMIN_NOT_FOUND',\r\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\r\n  DETAIL_REQUIRED = 'DETAIL_REQUIRED',\r\n}\r\n","import { I18N } from \"../../i18n.enum\";\r\nimport { ErrorDto } from \"./message.dto\";\r\nimport { ERRORS } from \"./message.enum\";\r\n\r\n\r\nexport const Errors: ErrorDto[] = [\r\n  {\r\n    key: ERRORS.DELETE_SUCCESS,\r\n    label: I18N.MESSAGES_DELETE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.UPDATE_SUCCESS,\r\n    label: I18N.MESSAGES_UPDATE_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.CREATED_SUCCESS,\r\n    label: I18N.MESSAGES_CREATED_SUCCESS,\r\n  },\r\n  {\r\n    key: ERRORS.LOGIN_FAIL,\r\n    label: I18N.LOGIN_FAIL,\r\n  }\r\n];\r\n","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Errors } from '../../modules/messages/message.constants';\r\nimport { handleResponseError } from '../utils/apis.util';\r\nimport { removeFromStorage } from '../utils/storage.util';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:4000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n  if (!!localStorage.getItem('token')) {\r\n    config.headers.common['Authorization'] =\r\n      'Bearer ' + localStorage.getItem('token');\r\n  }\r\n  config.headers.common['Access-Control-Allow-Origin'] = '*';\r\n  return config;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (res) => res,\r\n  (error) => {\r\n    // Remove all toasts !\r\n    toast.dismiss();\r\n\r\n    if (!error.response) {\r\n      toast.error('Unknown error happened! Please contact admin for support');\r\n      return handleResponseError(error);\r\n    }\r\n\r\n    const { data } = error.response;\r\n    const { detailError } = data;\r\n\r\n    let messageDetail = '';\r\n    let messageCode = '';\r\n\r\n    if (error.response.status === 403) {\r\n      removeFromStorage('token');\r\n      if (!window.location.pathname.includes('login'))\r\n        window.location.replace('/');\r\n    }\r\n\r\n    if (detailError) {\r\n      if (Array.isArray(detailError.message)) {\r\n        messageDetail = detailError.message[0];\r\n        messageCode = detailError?.errorCode ?? '';\r\n      } else {\r\n        messageDetail = detailError.message;\r\n        messageCode = detailError?.errorCode ?? '';\r\n      }\r\n    } else {\r\n      messageDetail = data.message;\r\n      messageCode = data?.errorCode ?? '';\r\n    }\r\n\r\n    if (messageCode !== '') {\r\n      const error = Errors.find((error) => error.key === messageCode);\r\n      if (error) toast.error((error.label));\r\n      else toast.error(messageDetail);\r\n    } else {\r\n      toast.error(messageDetail);\r\n    }\r\n    \r\n    if (error.response.status === 400) {\r\n      return data;\r\n    }\r\n\r\n    return handleResponseError(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n","export const handleResponseError = (error: any) => {\r\n  return Promise.reject(error);\r\n};\r\n\r\nexport const removeConfirmationFields = (object: any) => {\r\n  const keysWithConfirmation = Object.keys(object).filter((key) =>\r\n    key.includes('confirm')\r\n  );\r\n\r\n  const excludedFiltered = { ...object };\r\n  keysWithConfirmation.map((key) => delete excludedFiltered[key]);\r\n  return excludedFiltered;\r\n};\r\n\r\nexport const removeUnusedProps = (object: any) => {\r\n  let temp = {};\r\n  Object.keys(object).forEach((key) => {\r\n    if (object[key] !== undefined) temp = { ...temp, [key]: object[key] };\r\n  });\r\n  return temp;\r\n};\r\n","export enum DEFAULT_ROUTERS {\r\n  LOGIN = '/account/login',\r\n  FORGOT_PASSWORD = '/account/forgotpassword',\r\n  RESET_PASSWORD_TOKEN = '/account/reset-password/:token',\r\n  VERIFY_EMAIL = '/account/verify-email/:token',\r\n  SET_PASSWORD_TOKEN = '/account/set-password/:token',\r\n  CREATE = '/account/register',\r\n  SETUP = '/account/setup',\r\n  ACCOUNT_MANAGE = '/account/manage',\r\n  NOT_VERIFIED = '/account/not-verified',\r\n  THANKYOU = '/account/thankyou/:action'\r\n}\r\n\r\nexport enum DEFAULT_ACTION_ROUTERS {\r\n  THANKYOU = '/account/thankyou/',\r\n}\r\n\r\nexport enum DEFAULT_API {\r\n  PREFIX = '/accounts',\r\n}\r\n\r\nexport enum VERIFIED_STATUS {\r\n  UNVERIFIED,\r\n  PENDING,\r\n  VERIFIED,\r\n}\r\n"],"sourceRoot":""}